import streamlit as st
import pandas as pd

st.set_page_config(page_title='Finan√ßas', page_icon='üí∞')

st.markdown("""
# Boas Vindas!

## Nosso APP Finan√ßeiro!            

""")

# Widget de upload de dados
file_upload = st.file_uploader(label='Fa√ßa upload dos dados aqui:', type=['csv'])

# Verifica se algum arquivo foi feito upload
if file_upload:
    
    # Leitura dos dados
    df = pd.read_csv(file_upload)
    df['Data'] = pd.to_datetime(df['Data'], format = '%d/%m/%Y').dt.date

    # Exibi√ß√£o dos dados no App
    exp1 = st.expander('Dados Brutos')
    columns_fmt = {'Valor': st.column_config.NumberColumn('Valor', format='R$ %f')}
    exp1.dataframe(df, hide_index=True, column_config=columns_fmt)

    # Vis√£o Institui√ß√£o
    exp2 = st.expander('Institui√ß√µes')
    df_instituicao = df.pivot_table(index='Data', columns='Institui√ß√£o', values='Valor')

    # Abas para diferente visualiza√ß√µes
    tab_data, tab_history, tab_share = exp2.tabs(['Dados', 'Hist√≥rico', 'Distribui√ß√£o'])
    
    # Exibe DataFrame
    with tab_data:
        st.dataframe(df_instituicao)

    # Exibe Hist√≥rico
    with tab_history:    
        st.line_chart(df_instituicao)

    # Exibe Distribui√ß√£o
    with tab_share:

        # Filtro de data
        # date = st.date_input('Data para Distribui√ß√£o', 
        #                     min_value=df_instituicao.index.min(),
        #                     max_value=df_instituicao.index.max())
        
        # if date not in df_instituicao.index:
        #     st.warning('Entre com uma data v√°lida')

        # else:
        #     # Obtem a √∫ltima data
        #     #last_dt = df_instituicao.sort_index().iloc[-1]
        #     st.bar_chart(df_instituicao.loc[date])
        
        
        # Filtro de data
        date = st.selectbox('Filtro Data', options=df_instituicao.index)

        # Gr√°fico de distribui√ß√£o
        st.bar_chart(df_instituicao.loc[date])
